所有的这些函数都放在一个主循环里面进行，所以尽量只考虑单次循环。

1、控制小车轮子轮子运动的函数，分左轮右轮写，参数带一个PWM占空比用于控制速度。 
void motorcontrol_L(int duty);//控制左轮电机 
void motorcontrol_R(int duty);//控制右轮电机

2、红外避障，有两个。红外原理就是检测到障碍时灯亮输出高电平，检测距离大概是10厘米左右。 
void InfraredDM();//红外避障

3、超声波测距，超声波就是给Trig输出高电平触发，Echo收到返回声波输出高电平。然后根据时间差和声速算出距离。返回值就是算出的距离。 
float UltrasonicDM();//超声波测距

4、红外循迹，有两个。红外往地上照，检测到黑线返回高电平。返回值代表左转或右转。 
float InfraredTracking();

5、摄像头循迹，读取视频流的一帧，二值化，取图像一条横向的像素即可，检测中央代表道路的色块偏移多少，以此判断左转或右转。（因为摄像头的摆放原因，检测的会是小车前方几厘米的道路，可以把当前的左右转状态加入一个队列的数据结构，达到延迟处理。） 
这个有很多要处理的，不想封装成一个函数直接放在主程序里也不是不行，因为拖主循环运行速度的基本就是以这个图像的处理。其他都不怎么消耗性能。 

在有了上述2345四个模块的一帧结果后可以进行加权调整参数，决定此帧小车是左转还是右转、转的幅度大不大，这个可能就要放到车上实践性的运行才能得出比较好的效果了。
最终老师验收有两个：主要看小车循迹越快越准分越高；其次是老师要求额外拓展的功能，这个还没想好要做什么。。
流程大概如下：
int main()
{ 
GPIO端口模式设置； 
摄像头相关初始化； 
while(1) 
{ 
红外避障； 
超声波测距； 
红外循迹； 
摄像头循迹； 

根据得到的数据进行加权计算，得到具体怎么转； 

if（值代表左转） 
参数换算为占空比； 
电机左转(转速)； 
else 
参数换算为占空比； 
电机右转(转速)； 

}}